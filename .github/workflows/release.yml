name: Semantic Release
on:
  workflow_dispatch:

  push:
    branches:
      - main
      - beta

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set matrix for test
        id: set-matrix
        run: echo "matrix=$(find . -name '*.test.ts' | jq -R -s -c 'split("\n") | map(select(length > 0))')" >> $GITHUB_OUTPUT

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        files: ${{fromJson(needs.prepare-matrix.outputs.matrix)}}
    needs:
      - prepare-matrix
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "üîß setup Bun"
        uses: oven-sh/setup-bun@v2

      - name: "üì¶ install dependencies"
        run: bun install

      - name: "Run Vitest"
        run: bun x vitest ${{ matrix.files }}

      # - name: "Upload optimized models"
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: qdrant-optimized-models
      #     path: local_cache/

  release:
    runs-on: ubuntu-latest
    needs:
      - test
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "üîß setup Bun"
        uses: oven-sh/setup-bun@v2

      - name: "üì¶ install dependencies"
        run: bun install

      - name: "Semantic releaseüöÄ"
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_COMMITTER_NAME: "github-actions[bot]"
          GIT_COMMITTER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
          SKIP_CHANGELOG: true
        uses: docker://ghcr.io/open-sauced/release:2.4.0

      - name: "echo outputs"
        run: |
          echo "RELEASE_TAG: ${{ env.RELEASE_TAG }}"
          echo "RELEASE_VERSION: ${{ env.RELEASE_VERSION }}"
          echo "outputs.release-tag: ${{ steps.release.outputs.release-tag }}"
          echo "outputs.release-version: ${{ steps.release.outputs.release-version }}"
